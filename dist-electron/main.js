"use strict";const{app:o,BrowserWindow:i,ipcMain:d}=require("electron"),l=require("path"),{SerialPort:a}=require("serialport");let n={baudRate:9600,dataBits:8,parity:"none",stopBits:1,flowControl:!1},s=null;const c=async e=>{const t=await a.list();e.sender.send("main-message",{target:"getSerialPortList",res:t})},S=(e,t)=>{n=t,e.sender.send("main-message",{target:"setSerialPortOptions",res:"ok"})},g=e=>{e.sender.send("main-message",{target:"getSerialPortOptions",res:n})},p=(e,t)=>{s=new a(t,option,!1),e.sender.send("main-message",{target:"connectSerialPort",res:"ok"}),s.on("readable",()=>{const r=s.read();e.sender.send("data",r)})},P=(e,t)=>{s.write(t),e.sender.send("main-message",{target:"sendSerialPortData",res:"ok"})},m=e=>{s.close(()=>{}),e.sender.send("main-message",{target:"disconnectSerialPort",res:"ok"})};d.on("render-message",async(e,t)=>{switch(console.log(t),t.target){case"getSerialPortList":c(e);break;case"setSerialPortOptions":S(e,t.data.options);break;case"getSerialPortOptions":g(e);break;case"connectSerialPort":p(e,t.data.path);break;case"sendSerialPortData":P(e,t.data);break;case"disconnectSerialPort":m(e);break;default:e.sender.send("main-message",{target:t.target,res:"未定义方法"});break}});o.whenReady().then(()=>{const e=new i({title:"Main window",width:1200,height:600,webPreferences:{nodeIntegration:!0,webSecurity:!1,contextIsolation:!1,preload:l.join(__dirname,"preload.js")}});process.env.VITE_DEV_SERVER_URL?e.loadURL(process.env.VITE_DEV_SERVER_URL):e.loadFile("dist/index.html"),e.webContents.openDevTools()});
